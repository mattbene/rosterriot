# Generated by Django 4.2.7 on 2023-11-07 14:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, null=True, verbose_name='conference long name')),
                ('short', models.CharField(max_length=24, null=True, verbose_name='conference short name')),
                ('abbr', models.CharField(max_length=6, null=True, verbose_name='conference abbreviation')),
                ('first', models.PositiveSmallIntegerField(null=True, verbose_name='first conference season')),
                ('last', models.PositiveSmallIntegerField(null=True, verbose_name='final conference season')),
            ],
        ),
        migrations.CreateModel(
            name='DraftedPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DraftRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
                ('snake_draft', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FantasyLeague',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('founding_date', models.DateField(null=True, verbose_name='league foundation date')),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FantasyTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.fantasyleague')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('home_points', models.PositiveSmallIntegerField(verbose_name='home team total points')),
                ('away_points', models.PositiveSmallIntegerField(verbose_name='away team total points')),
                ('location', models.CharField(max_length=64)),
                ('spread', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='vegas point spread')),
                ('total', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='vegas combined point total')),
                ('favorite', models.CharField(max_length=64, verbose_name='vegas favorite')),
                ('is_final', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('hometown', models.CharField(max_length=64)),
                ('high_school', models.CharField(max_length=64, null=True)),
                ('top_100', models.CharField(max_length=24, null=True)),
                ('espn_id', models.PositiveIntegerField(blank=True, null=True)),
                ('sref_id', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RosterRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
                ('no_of_players', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('city', models.CharField(max_length=64, null=True)),
                ('state', models.CharField(max_length=64, null=True)),
                ('logo', models.URLField(null=True, verbose_name='school logo')),
                ('alt', models.URLField(null=True, verbose_name='alternative school image')),
                ('abbr', models.CharField(max_length=6, null=True, verbose_name='school abbreviation')),
                ('espn_id', models.PositiveIntegerField(blank=True, null=True)),
                ('sref_id', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScoringRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
                ('points', models.PositiveSmallIntegerField(default=1)),
                ('rebounds', models.PositiveSmallIntegerField(default=1)),
                ('assists', models.PositiveSmallIntegerField(default=1)),
                ('steals', models.PositiveSmallIntegerField(default=1)),
                ('blocks', models.PositiveSmallIntegerField(default=1)),
                ('turnovers', models.SmallIntegerField(default=-1)),
                ('multiplier', models.PositiveSmallIntegerField(default=2)),
                ('multiplier_seed', models.PositiveSmallIntegerField(default=12)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('year', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(null=True, verbose_name='season start date')),
                ('end_date', models.DateField(null=True, verbose_name='season end date')),
            ],
        ),
        migrations.CreateModel(
            name='TradeRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
                ('enable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthdate', models.DateField()),
                ('tag_line', models.CharField(max_length=128)),
                ('legacy_status', models.BooleanField(default=False)),
                ('premium_status', models.BooleanField(default=False)),
                ('join_date', models.DateField()),
                ('last_login', models.DateTimeField(null=True)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('banned', 'Banned')], default='active', max_length=10)),
                ('league_wins', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('coach', models.CharField(max_length=64, null=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mbb.conference')),
                ('school_espn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_espn', to='mbb.school')),
                ('school_sref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_sref', to='mbb.school')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.season')),
            ],
        ),
        migrations.CreateModel(
            name='Statline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('rebounds', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('steals', models.IntegerField()),
                ('blocks', models.IntegerField()),
                ('turnovers', models.IntegerField()),
                ('fouls', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.player')),
            ],
        ),
        migrations.CreateModel(
            name='PostseasonTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('start_date', models.DateField(null=True, verbose_name='tournament start date')),
                ('end_date', models.DateField(null=True, verbose_name='tournament end date')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.season')),
            ],
        ),
        migrations.CreateModel(
            name='PostseasonTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.postseasontournament')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(null=True, verbose_name='player number')),
                ('position', models.CharField(max_length=2, null=True)),
                ('height', models.DecimalField(decimal_places=4, max_digits=5, null=True)),
                ('weight', models.PositiveSmallIntegerField(null=True)),
                ('academic_year', models.CharField(max_length=2, null=True, verbose_name='player academic year')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.team')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='seasons',
            field=models.ManyToManyField(related_name='players', through='mbb.PlayerSeason', to='mbb.season'),
        ),
        migrations.AddField(
            model_name='game',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='mbb.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='mbb.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='mbb.season'),
        ),
        migrations.CreateModel(
            name='FantasyTeamScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=10)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.fantasyteam')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.postseasontournament')),
            ],
        ),
        migrations.CreateModel(
            name='FantasyTeamPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drafted_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.draftedplayer')),
                ('fantasy_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.fantasyteam')),
            ],
        ),
        migrations.AddField(
            model_name='fantasyteam',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.userprofile'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='commissioner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.userprofile'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='draft_rules',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mbb.draftrule'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='participants',
            field=models.ManyToManyField(related_name='leagues', through='mbb.FantasyTeam', to='mbb.userprofile'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='roster_settings',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mbb.rosterrule'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='scoring_rules',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mbb.scoringrule'),
        ),
        migrations.AddField(
            model_name='fantasyleague',
            name='trade_rules',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mbb.traderule'),
        ),
        migrations.AddField(
            model_name='draftedplayer',
            name='fantasy_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.fantasyteam'),
        ),
        migrations.AddField(
            model_name='draftedplayer',
            name='player_season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mbb.playerseason'),
        ),
    ]
